name: Conventional Commits

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened, edited]

jobs:
  conventional-commits:
    name: Validate Conventional Commits
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Validate Conventional Commits
      uses: wagoid/commitlint-github-action@v5
      with:
        configFile: '.commitlintrc.json'
        helpURL: 'https://github.com/raquezha/codesnapper/blob/main/CONTRIBUTING.md#commit-standards'

    - name: Comment on PR if validation fails
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          const { data: comments } = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
          });

          const botComment = comments.find(comment =>
            comment.user.type === 'Bot' &&
            comment.body.includes('Conventional Commits Validation Failed')
          );

          const message = `## ðŸš¨ Conventional Commits Validation Failed

          Your commit messages don't follow the [Conventional Commits](https://www.conventionalcommits.org/) specification.

          **Required format:** \`type(scope): description\`

          **Examples:**
          - \`feat: add user authentication\`
          - \`fix: resolve login validation bug\`
          - \`docs: update API documentation\`
          - \`test: add unit tests for user service\`

          **Valid types:** feat, fix, docs, style, refactor, test, chore

          Please update your commit messages and force push to fix this issue.

          For detailed guidelines, see our [Contributing Guide](https://github.com/raquezha/codesnapper/blob/main/CONTRIBUTING.md#commit-standards).`;

          if (botComment) {
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: botComment.id,
              body: message
            });
          } else {
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: message
            });
          }
